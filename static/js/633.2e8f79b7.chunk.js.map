{"version":3,"file":"static/js/633.2e8f79b7.chunk.js","mappings":"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","sources":["components/CustomTextField/CustomTextField.jsx","components/Loader/Loader.stiled.js","components/Loader/Loader.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts.js","redux/contacts/selectors.js"],"sourcesContent":["import { styled } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\n\nexport const CustomTextField = styled(TextField)({\n  '.MuiInputBase-input': {\n    padding: 2,\n    height: 30,\n    paddingLeft: 10,\n  },\n  '.MuiFormLabel-root': {\n    top: -12,\n    '&.Mui-focused': {\n      top: 0,\n    },\n    '&.MuiFormLabel-filled': {\n      top: 0,\n    },\n  },\n\n  '& .MuiOutlinedInput-root': {\n    borderRadius: 10,\n  },\n});\n","import styled from 'styled-components';\n\nexport const LoaderWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.stiled';\nconst Loader = ({ size }) => (\n  <LoaderWrapper>\n    <RotatingLines\n      strokeColor=\"#d61d1d\"\n      strokeWidth=\"4\"\n      animationDuration=\"1\"\n      width={size}\n      visible={true}\n    />\n  </LoaderWrapper>\n);\n\nexport default Loader;\n","import {\n  IconButton,\n  ListItem,\n  ListItemText,\n  CircularProgress,\n  Tooltip,\n  Zoom,\n} from '@mui/material';\n\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport const ContactItem = ({ id, name, number, onDelete, isLoading }) => {\n  return (\n    <ListItem\n      sx={{\n        flexWrap: 'nowrap',\n        justifyContent: 'space-between',\n        pr: 5,\n        pt: '2px',\n        pb: '2px',\n        '.MuiListItemSecondaryAction-root': { right: 4 },\n      }}\n      disablePadding={true}\n      divider={true}\n      secondaryAction={\n        <Tooltip\n          title=\"Видалити контакт\"\n          TransitionComponent={Zoom}\n          arrow\n          placement=\"top-end\"\n        >\n          <IconButton\n            sx={{\n              border: '1px solid transparent',\n              '&:hover': {\n                border: '1px solid#ff0000',\n              },\n            }}\n            edge=\"end\"\n            aria-label=\"delete\"\n            onClick={() => onDelete(id)}\n          >\n            <DeleteIcon />\n            {isLoading && (\n              <CircularProgress\n                size={38}\n                sx={{\n                  color: '#ff0000',\n                  position: 'absolute',\n                  zIndex: 1,\n                }}\n              />\n            )}\n          </IconButton>\n        </Tooltip>\n      }\n    >\n      <ListItemText\n        sx={{\n          overflow: 'hidden',\n          '\t.MuiListItemText-primary': {\n            textOverflow: 'ellipsis',\n            overflow: 'hidden',\n          },\n        }}\n        primary={name}\n      />\n      <ListItemText\n        sx={{\n          width: '130px',\n          whiteSpace: 'nowrap',\n          flexGrow: 0,\n          flexShrink: 0,\n          '.MuiTypography-root': { letterSpacing: 1 },\n        }}\n        primary={number}\n      />\n    </ListItem>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { selectfiltredContact } from 'redux/contacts/selectors';\nimport { ContactItem } from 'components/ContactListItem/ContactListItem';\nimport { List, Typography, Collapse, Box } from '@mui/material';\n\nimport { TransitionGroup } from 'react-transition-group';\nimport { useDeleteContactMutation } from 'redux/contacts/contactsApi';\nimport toast from 'react-hot-toast';\nimport { useState } from 'react';\n\nconst ContactList = () => {\n  const filtredContacts = useSelector(selectfiltredContact);\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n  const [currentItem, setCurrentItem] = useState(0);\n  const onDelete = id => {\n    setCurrentItem(id);\n    toast.promise(deleteContact(id).unwrap(), {\n      loading: 'Пробую видалити...',\n      success: data => `Контакт з ім'ям \"${data?.name}\" видалено`,\n      error: error => `${error?.data?._message}`,\n    });\n  };\n  return filtredContacts.length ? (\n    <Box>\n      <Typography>Контакти</Typography>\n      <List>\n        <TransitionGroup>\n          {filtredContacts.map(contact => (\n            <Collapse key={contact.id}>\n              {ContactItem({\n                ...contact,\n                onDelete,\n                isLoading: isLoading && contact.id === currentItem,\n              })}\n            </Collapse>\n          ))}\n        </TransitionGroup>\n      </List>\n    </Box>\n  ) : (\n    <Typography>Контактів нема</Typography>\n  );\n};\n\nexport default ContactList;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport { selectFilter } from '../../redux/filter/filterSlice';\nimport { Box } from '@mui/material';\nimport { CustomTextField } from '../CustomTextField/CustomTextField';\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const onChange = evt => {\n    dispatch(setFilter(evt.target.value.toLowerCase()));\n  };\n  return (\n    <Box pt={2} pb={2}>\n      <CustomTextField\n        label=\"Пошук контактів за ім`ям\"\n        color=\"formInput\"\n        onChange={onChange}\n        value={filter}\n        fullWidth={true}\n      />\n    </Box>\n  );\n};\n\nexport default Filter;\n","import Loader from 'components/Loader/Loader';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport { useGetContactsQuery } from 'redux/contacts/contactsApi';\nimport { Typography, Paper } from '@mui/material';\nimport { useAuth } from 'hooks/useAuth';\nexport default function Contacts() {\n  const { isLoading, isError: error } = useGetContactsQuery();\n  const { user } = useAuth();\n  // console.log(user);\n  return (\n    <Paper\n      elevation={4}\n      sx={{\n        width: '100%',\n        borderRadius: 0,\n        mt: 1,\n        p: 2,\n        boxSizing: 'border-box',\n      }}\n    >\n      <Typography variant=\"h6\" component=\"h2\" align=\"center\">\n        Вітаю {user.name}\n      </Typography>\n      <Filter />\n      {isLoading && !error && <Loader size={300} />}\n      {!isLoading && !error && <ContactList />}\n      {error && (\n        <>\n          <Typography>Щось пішло не так</Typography>\n          <p>{error}</p>\n        </>\n      )}\n    </Paper>\n  );\n}\n","import { createSelector } from '@reduxjs/toolkit';\nimport { contactsApi } from './contactsApi';\nimport { selectFilter } from '../filter/filterSlice';\nconst inititial = [];\n\nexport const selectContacts = createSelector(\n  contactsApi.endpoints.getContacts.select(),\n  Result => Result?.data ?? inititial\n);\n\nexport const selectfiltredContact = createSelector(\n  [selectFilter, selectContacts],\n  (filter, contacts) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter)\n    );\n  }\n);\n"],"names":["CustomTextField","styled","TextField","padding","height","paddingLeft","top","borderRadius","LoaderWrapper","_templateObject","_taggedTemplateLiteral","_ref","size","_jsx","children","RotatingLines","strokeColor","strokeWidth","animationDuration","width","visible","ContactItem","id","name","number","onDelete","isLoading","_jsxs","ListItem","sx","flexWrap","justifyContent","pr","pt","pb","right","disablePadding","divider","secondaryAction","Tooltip","title","TransitionComponent","Zoom","arrow","placement","IconButton","border","edge","onClick","DeleteIcon","CircularProgress","color","position","zIndex","ListItemText","overflow","textOverflow","primary","whiteSpace","flexGrow","flexShrink","letterSpacing","filtredContacts","useSelector","selectfiltredContact","_useDeleteContactMuta","useDeleteContactMutation","_useDeleteContactMuta2","_slicedToArray","deleteContact","_useState","useState","_useState2","currentItem","setCurrentItem","toast","unwrap","loading","success","data","concat","error","_error$data","_message","length","Box","Typography","List","TransitionGroup","map","contact","Collapse","_objectSpread","filter","selectFilter","dispatch","useDispatch","label","onChange","evt","setFilter","target","value","toLowerCase","fullWidth","Contacts","_useGetContactsQuery","useGetContactsQuery","isError","user","useAuth","Paper","elevation","mt","p","boxSizing","variant","component","align","Filter","Loader","ContactList","_Fragment","inititial","selectContacts","createSelector","contactsApi","Result","_Result$data","contacts","includes"],"sourceRoot":""}